package bot

import (
	fmt "fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
func GetContactKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButtonContact("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º"),
		),
	)
	keyboard.OneTimeKeyboard = true
	return keyboard
}

// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ç–µ–∫—É—â–µ–º –∫–æ–¥–µ,
// –Ω–æ –µ—ë –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —Å–ª—É—á–∞–π –±—É–¥—É—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
func GetLocationKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButtonLocation("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º"),
		),
	)
	keyboard.OneTimeKeyboard = true
	return keyboard
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
func GetMainMenuKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üéØ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üìö –ò—Å—Ç–æ—Ä–∏—è —Ç–∏–∫–µ—Ç–æ–≤"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚ú® –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç"),
		),
	)
	keyboard.ResizeKeyboard = true
	return keyboard
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏
func GetConfirmKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚úÖ –î–∞"),
			tgbotapi.NewKeyboardButton("‚ùå –ù–µ—Ç"),
		),
	)
	keyboard.OneTimeKeyboard = true
	return keyboard
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–∏–∫–µ—Ç–æ–≤ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏
func GetCategoryKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üí≠ –í–æ–ø—Ä–æ—Å"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üö® –í–∞–∂–Ω–æ,–°—Ä–æ—á–Ω–æ"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üí∞ –§–∏–Ω–∞–Ω—Å—ã"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"),
		),
	)
	keyboard.OneTimeKeyboard = true
	return keyboard
}

// –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç–∏–∫–µ—Ç–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏
func GetTicketInlineKeyboard(ticketID int) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì∑ –§–æ—Ç–æ", fmt.Sprintf("photos_%d", ticketID)),
			tgbotapi.NewInlineKeyboardButtonData("üìà –°—Ç–∞—Ç—É—Å", fmt.Sprintf("status_%d", ticketID)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å", fmt.Sprintf("reply_%d", ticketID)),
			tgbotapi.NewInlineKeyboardButtonData("üîí –ó–∞–∫—Ä—ã—Ç—å", fmt.Sprintf("close_%d", ticketID)),
		),
	)
}
