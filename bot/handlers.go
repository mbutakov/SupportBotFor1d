package bot

import (
	"fmt"
	"io"
	"net/http"
	"os"
	"path/filepath"
	"strconv"
	"strings"
	"time"

	"supportTicketBotGo/database"
	"supportTicketBotGo/logger"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// UserState —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–æ—Ç–µ
type UserState struct {
	State       string
	FullName    string
	Phone       string
	LocationLat float64
	LocationLng float64
	BirthDate   time.Time
	TicketTitle string
	TicketDesc  string
	TicketCat   string
	TicketID    int
}

// userStates —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
var userStates = make(map[int64]*UserState)

// --- –°–¢–ê–¢–£–°–´ –¢–ò–ö–ï–¢–û–í ---
const (
	StatusCreated        = "created"         // üÜï –°–æ–∑–¥–∞–Ω
	StatusAssigned       = "assigned"        // üë®‚Äçüíª –ù–∞–∑–Ω–∞—á–µ–Ω
	StatusInProgress     = "in_progress"     // üîß –í —Ä–∞–±–æ—Ç–µ
	StatusWaitingUser    = "waiting_user"    // ‚ùì –û–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	StatusWaitingSupport = "waiting_support" // ‚è≥ –û–∂–∏–¥–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
	StatusResolved       = "resolved"        // ‚úÖ –†–µ—à—ë–Ω
	StatusClosed         = "closed"          // üóÉ –ó–∞–∫—Ä—ã—Ç
	StatusCancelled      = "cancelled"       // üö´ –û—Ç–º–µ–Ω—ë–Ω
)

// GetStatusEmojiAndText –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ç–∏–∫–µ—Ç–∞
func GetStatusEmojiAndText(status string) (string, string) {
	switch status {
	case StatusCreated:
		return "üÜï", "–°–æ–∑–¥–∞–Ω: —Ç–∏–∫–µ—Ç –æ–∂–∏–¥–∞–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç—É"
	case StatusAssigned:
		return "üë®‚Äçüíª", "–ù–∞–∑–Ω–∞—á–µ–Ω: –æ–∂–∏–¥–∞–µ—Ç –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–æ–º"
	case StatusInProgress:
		return "üîß", "–í —Ä–∞–±–æ—Ç–µ: –∞–≥–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ —Ç–∏–∫–µ—Ç–æ–º"
	case StatusWaitingUser:
		return "‚ùì", "–û–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	case StatusWaitingSupport:
		return "‚è≥", "–û–∂–∏–¥–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
	case StatusResolved:
		return "‚úÖ", "–†–µ—à—ë–Ω: –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ —Ä–µ—à–µ–Ω–∏–µ, –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
	case StatusClosed:
		return "üóÉ", "–ó–∞–∫—Ä—ã—Ç"
	case StatusCancelled:
		return "üö´", "–û—Ç–º–µ–Ω—ë–Ω: —Ç–∏–∫–µ—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ—à–µ–Ω–∏—è"
	default:
		return "‚ùî", status
	}
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –§–ò–û
func validateFullName(name string) bool {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É (–º–∏–Ω–∏–º—É–º 2 —Å–ª–æ–≤–∞, –∫–∞–∂–¥–æ–µ –Ω–µ –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤)
	parts := strings.Fields(name)
	if len(parts) < 2 {
		return false
	}

	for _, part := range parts {
		if len(part) < 2 {
			return false
		}
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã - –±—É–∫–≤—ã –∏–ª–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞–∫–∏

	}

	return true
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
func validateBirthDate(dateStr string) (time.Time, error) {
	// –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY
	date, err := time.Parse("02.01.2006", dateStr)
	if err != nil {
		return time.Time{}, err
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –Ω–µ –≤ –±—É–¥—É—â–µ–º
	if date.After(time.Now()) {
		return time.Time{}, fmt.Errorf("–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º")
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–µ–Ω—å—à–µ 14 –ª–µ—Ç
	minAge := time.Now().AddDate(-14, 0, 0)
	if date.After(minAge) {
		return time.Time{}, fmt.Errorf("–≤–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 14 –ª–µ—Ç")
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ –±–æ–ª–µ–µ 120 –ª–µ—Ç
	maxAge := time.Now().AddDate(-120, 0, 0)
	if date.Before(maxAge) {
		return time.Time{}, fmt.Errorf("–≤–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 120 –ª–µ—Ç")
	}

	return date, nil
}

// –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ uploads
func ensureUploadsDir() string {
	// –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ uploads –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
	uploadsDir := "../uploads"

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
	if _, err := os.Stat(uploadsDir); os.IsNotExist(err) {
		// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
		err := os.MkdirAll(uploadsDir, 0755)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ uploads: %v", err)
			// –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
			return "uploads"
		}
	}

	return uploadsDir
}

// SendErrorMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
func SendErrorMessage(bot *tgbotapi.BotAPI, chatID int64, text string) {
	msg := tgbotapi.NewMessage(chatID, "‚ùå "+text)
	SafeSendMessage(bot, msg)
}

// –°–æ–∑–¥–∞–¥–∏–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
func SafeSendMessage(bot *tgbotapi.BotAPI, msg tgbotapi.MessageConfig) {
	_, err := bot.Send(msg)
	if err != nil {
		logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
	// –£–¥–∞–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
func SafeSendPhoto(bot *tgbotapi.BotAPI, photo tgbotapi.PhotoConfig) {
	_, err := bot.Send(photo)
	if err != nil {
		logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: %v", err)
	}
	// –£–¥–∞–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª—é–±–æ–≥–æ Chattable (—Å–æ–æ–±—â–µ–Ω–∏—è, —Ñ–æ—Ç–æ –∏ —Ç.–¥.)
func safeSend(bot *tgbotapi.BotAPI, chattable tgbotapi.Chattable) {
	_, err := bot.Send(chattable)
	if err != nil {
		logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: %v", err)
	}
	// –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–¥–µ—Ä–∂–∫–∏
}

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
func saveUserAvatar(bot *tgbotapi.BotAPI, userID int64) error {
	// –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	photos, err := bot.GetUserProfilePhotos(tgbotapi.UserProfilePhotosConfig{
		UserID: userID,
		Limit:  1,
	})
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è: %v", err)
	}

	// –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–æ—Ñ–∏–ª—è, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –≤—ã—Ö–æ–¥–∏–º
	if photos.TotalCount == 0 {
		err = database.UpdateUserAvatar(userID, false)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
		}
		return nil
	}

	// –ü–æ–ª—É—á–∞–µ–º —Å–∞–º—É—é –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ
	photo := photos.Photos[0][len(photos.Photos[0])-1]

	// –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
	fileURL, err := bot.GetFileDirectURL(photo.FileID)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL —Ñ–æ—Ç–æ: %v", err)
	}

	// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
	avatarsDir := filepath.Join("..", "uploads", "avatars")
	if err := os.MkdirAll(avatarsDir, 0755); err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤: %v", err)
	}

	// –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
	resp, err := http.Get(fileURL)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–æ—Ç–æ: %v", err)
	}
	defer resp.Body.Close()

	// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
	avatarPath := filepath.Join(avatarsDir, fmt.Sprintf("%d.png", userID))
	file, err := os.Create(avatarPath)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: %v", err)
	}
	defer file.Close()

	// –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
	_, err = io.Copy(file, resp.Body)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: %v", err)
	}

	// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤–∞—Ç–∞—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	err = database.UpdateUserAvatar(userID, true)
	if err != nil {
		logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
	}

	return nil
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
func HandleStart(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {
	userID := message.From.ID

	// –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î, –µ—Å–ª–∏ –µ–µ –µ—â–µ –Ω–µ—Ç
	err := database.CreateUser(userID)
	if err != nil {
		logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
		SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
		return
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	isRegistered, err := database.IsUserRegistered(userID)
	if err != nil {
		logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ %d: %v", userID, err)
		SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
		return
	}

	if isRegistered {
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
		msg := tgbotapi.NewMessage(message.Chat.ID, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏!")
		msg.ReplyMarkup = GetMainMenuKeyboard()
		SafeSendMessage(bot, msg)
	} else {
		// –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
		userStates[userID] = &UserState{State: "awaiting_fullname"}

		msg := tgbotapi.NewMessage(message.Chat.ID,
			"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"+
				"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):")
		SafeSendMessage(bot, msg)
	}
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func HandleMessage(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {
	userID := message.From.ID
	state, exists := userStates[userID]

	// –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏ –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
	if !exists {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
		isRegistered, err := database.IsUserRegistered(userID)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ %d: %v", userID, err)
			SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
			return
		}

		if isRegistered {
			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
			HandleMainMenu(bot, message)
			return
		} else {
			// –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
			err := database.CreateUser(userID)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
				return
			}
			userStates[userID] = &UserState{State: "awaiting_fullname"}

			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"+
					"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):")
			SafeSendMessage(bot, msg)
			return
		}
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	switch state.State {
	case "awaiting_fullname":
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –§–ò–û
		if !validateFullName(message.Text) {
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):")
			SafeSendMessage(bot, msg)
			return
		}

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
		state.FullName = message.Text
		state.State = "awaiting_phone"

		msg := tgbotapi.NewMessage(message.Chat.ID,
			"–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º:")
		msg.ReplyMarkup = GetContactKeyboard()
		SafeSendMessage(bot, msg)

	case "awaiting_phone":
		// –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–µ–ª–∏—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
		if message.Contact == nil {
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º':")
			msg.ReplyMarkup = GetContactKeyboard()
			SafeSendMessage(bot, msg)
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		if message.Contact.UserID != message.From.ID {
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º, –∞ –Ω–µ —á—É–∂–∏–º:")
			msg.ReplyMarkup = GetContactKeyboard()
			SafeSendMessage(bot, msg)
			return
		}

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Å—Ä–∞–∑—É –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
		state.Phone = message.Contact.PhoneNumber
		state.LocationLat = 0.0
		state.LocationLng = 0.0
		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–Ω—É–ª–µ–≤–∞—è –¥–∞—Ç–∞)
		state.BirthDate = time.Time{}

		// –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		hasAvatar := false
		err := saveUserAvatar(bot, userID)
		if err != nil {
			logger.Warning.Printf("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
		} else {
			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∞–≤–∞—Ç–∞—Ä–∞
			avatarPath := filepath.Join("..", "uploads", "avatars", fmt.Sprintf("%d.png", userID))
			if _, err := os.Stat(avatarPath); err == nil {
				hasAvatar = true
			}
		}

		// –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
		user := &database.User{
			ID:           userID,
			FullName:     state.FullName,
			Phone:        state.Phone,
			LocationLat:  state.LocationLat,
			LocationLng:  state.LocationLng,
			BirthDate:    state.BirthDate,
			IsRegistered: true,
			HasAvatar:    hasAvatar,
		}

		err = database.UpdateUserRegistration(user)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
			SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
			delete(userStates, userID)
			return
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
		msg := tgbotapi.NewMessage(message.Chat.ID,
			"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.")
		msg.ReplyMarkup = GetMainMenuKeyboard()
		SafeSendMessage(bot, msg)

		// –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		delete(userStates, userID)

	case "creating_ticket_category":
		// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–∏–∫–µ—Ç–∞
		if message.Text == "‚ùå –û—Ç–º–µ–Ω–∞" || message.Text == "–û—Ç–º–µ–Ω–∞" {
			// –û—Ç–º–µ–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
			msg.ReplyMarkup = GetMainMenuKeyboard()
			SafeSendMessage(bot, msg)
			delete(userStates, userID)
			return
		}

		validCategories := map[string]string{
			"üí≠ –í–æ–ø—Ä–æ—Å":       "–≤–æ–ø—Ä–æ—Å",
			"–í–æ–ø—Ä–æ—Å":         "–≤–æ–ø—Ä–æ—Å",
			"üö® –í–∞–∂–Ω–æ,–°—Ä–æ—á–Ω–æ": "–≤–∞–∂–Ω–æ,—Å—Ä–æ—á–Ω–æ",
			"–í–∞–∂–Ω–æ,–°—Ä–æ—á–Ω–æ":   "–≤–∞–∂–Ω–æ,—Å—Ä–æ—á–Ω–æ",
			"üí∞ –§–∏–Ω–∞–Ω—Å—ã":      "—Ñ–∏–Ω–∞–Ω—Å—ã",
			"–§–∏–Ω–∞–Ω—Å—ã":        "—Ñ–∏–Ω–∞–Ω—Å—ã",
		}

		category, valid := validCategories[message.Text]
		if !valid {
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:")
			msg.ReplyMarkup = GetCategoryKeyboard()
			SafeSendMessage(bot, msg)
			return
		}

		state.TicketCat = category
		state.State = "creating_ticket_description"

		msg := tgbotapi.NewMessage(message.Chat.ID,
			"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è:")
		msg.ReplyMarkup = tgbotapi.NewRemoveKeyboard(false)
		SafeSendMessage(bot, msg)

	case "creating_ticket_description":
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
		if len(message.Text) < 10 || len(message.Text) > 1000 {
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 10 –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
			SafeSendMessage(bot, msg)
			return
		}

		state.TicketDesc = message.Text

		// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∏–∫–µ—Ç–∞
		state.TicketTitle = generateTicketTitle(state.TicketCat, state.TicketDesc)

		state.State = "creating_ticket_confirm"

		// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
		confirmText := fmt.Sprintf("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞:\n\n"+
			"–ó–∞–≥–æ–ª–æ–≤–æ–∫: %s\n"+
			"–û–ø–∏—Å–∞–Ω–∏–µ: %s\n"+
			"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: %s\n\n"+
			"–í—Å—ë –≤–µ—Ä–Ω–æ?", state.TicketTitle, state.TicketDesc, getCategoryName(state.TicketCat))

		msg := tgbotapi.NewMessage(message.Chat.ID, confirmText)
		msg.ReplyMarkup = GetConfirmKeyboard()
		SafeSendMessage(bot, msg)

	case "creating_ticket_confirm":
		// –°–æ–∑–¥–∞–µ–º —Ç–∏–∫–µ—Ç, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª
		if message.Text == "‚úÖ –î–∞" || message.Text == "–î–∞" {
			// –°–æ–∑–¥–∞–µ–º —Ç–∏–∫–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			ticket := &database.Ticket{
				UserID:      userID,
				Title:       state.TicketTitle,
				Description: state.TicketDesc,
				Status:      "—Å–æ–∑–¥–∞–Ω",
				Category:    state.TicketCat,
			}

			ticketID, err := database.CreateTicket(ticket)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞")
				return
			}

			// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∏–∫–µ—Ç–µ
			ticketMessage := &database.TicketMessage{
				TicketID:   ticketID,
				SenderType: "user",
				SenderID:   userID,
				Message:    state.TicketDesc,
			}

			_, err = database.AddTicketMessage(ticketMessage)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–∏–∫–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", userID, err)
			}

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞
			msg := tgbotapi.NewMessage(message.Chat.ID,
				fmt.Sprintf("üéä –¢–∏–∫–µ—Ç #%d —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", ticketID))
			msg.ReplyMarkup = GetMainMenuKeyboard()
			SafeSendMessage(bot, msg)

		} else if message.Text == "‚ùå –ù–µ—Ç" || message.Text == "–ù–µ—Ç" {
			// –û—Ç–º–µ–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
			msg.ReplyMarkup = GetMainMenuKeyboard()
			SafeSendMessage(bot, msg)
		} else {
			// –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç':")
			msg.ReplyMarkup = GetConfirmKeyboard()
			SafeSendMessage(bot, msg)
			return
		}

		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
		delete(userStates, userID)

	case "viewing_tickets":
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
		if message.Text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" {
			msg := tgbotapi.NewMessage(message.Chat.ID, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:")
			msg.ReplyMarkup = GetMainMenuKeyboard()
			SafeSendMessage(bot, msg)
			delete(userStates, userID)
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Ç–∏–∫–µ—Ç
		// –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏: "#ID —Å—Ç–∞—Ç—É—Å –∑–∞–≥–æ–ª–æ–≤–æ–∫ [N —Å–æ–æ–±—â.]"
		if strings.HasPrefix(message.Text, "#") {
			parts := strings.Split(message.Text, " ")
			if len(parts) < 2 {
				// –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
				msg := tgbotapi.NewMessage(message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–∫–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:")
				SafeSendMessage(bot, msg)
				return
			}

			// –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∏–∫–µ—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
			ticketIDStr := parts[0][1:] // –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª # –≤ –Ω–∞—á–∞–ª–µ
			ticketID, err := strconv.Atoi(ticketIDStr)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ ID —Ç–∏–∫–µ—Ç–∞: %v", err)
				msg := tgbotapi.NewMessage(message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID —Ç–∏–∫–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:")
				SafeSendMessage(bot, msg)
				return
			}

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∏–∫–µ—Ç –∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			ticket, err := database.GetTicketByID(ticketID)
			if err != nil || ticket.UserID != userID {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞ %d: %v", ticketID, err)
				msg := tgbotapi.NewMessage(message.Chat.ID, "–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–º—É.")
				SafeSendMessage(bot, msg)
				return
			}

			// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞
			showTicketConversation(bot, message.Chat.ID, ticketID)

			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞
			state.State = "viewing_ticket"
			state.TicketID = ticketID

			return
		}

		// –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ç–æ–≤ —Å–Ω–æ–≤–∞
		msg := tgbotapi.NewMessage(message.Chat.ID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥':")
		SafeSendMessage(bot, msg)

	case "viewing_ticket":
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–∏–∫–µ—Ç–æ–≤
		if message.Text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" {
			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–∏–∫–µ—Ç–æ–≤
			HandleMainMenu(bot, &tgbotapi.Message{
				From:      message.From,
				Chat:      message.Chat,
				Text:      "–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã",
				MessageID: message.MessageID,
			})
			return
		}

		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ"
		if message.Text == "üñº –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ" {
			showTicketPhotos(bot, message.Chat.ID, state.TicketID)
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–∏–∫–µ—Ç
		ticket, err := database.GetTicketByID(state.TicketID)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞ %d: %v", state.TicketID, err)
			SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —Ç–∏–∫–µ—Ç—É")
			return
		}

		if ticket.Status == "–∑–∞–∫—Ä—ã—Ç" {
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω.")
			SafeSendMessage(bot, msg)
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
		if message.Photo != nil && len(message.Photo) > 0 {
			// –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞–∏–ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
			photo := message.Photo[len(message.Photo)-1]

			// –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ uploads
			uploadsDir := ensureUploadsDir()

			// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
			userDir := filepath.Join(uploadsDir, strconv.FormatInt(userID, 10))
			if _, err := os.Stat(userDir); os.IsNotExist(err) {
				err := os.MkdirAll(userDir, 0755)
				if err != nil {
					logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %v", err)
					SendErrorMessage(bot, message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
					return
				}
			}

			// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–∏–∫–µ—Ç–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
			ticketDir := filepath.Join(userDir, strconv.Itoa(state.TicketID))
			if _, err := os.Stat(ticketDir); os.IsNotExist(err) {
				err := os.MkdirAll(ticketDir, 0755)
				if err != nil {
					logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ç–∏–∫–µ—Ç–∞: %v", err)
					SendErrorMessage(bot, message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
					return
				}
			}

			// –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
			fileURL, err := bot.GetFileDirectURL(photo.FileID)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL —Ñ–æ—Ç–æ: %v", err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
				return
			}

			// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ URL –∏–ª–∏ Content-Type
			resp, err := http.Get(fileURL)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–æ—Ç–æ: %v", err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
				return
			}
			defer resp.Body.Close()

			// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ Content-Type
			contentType := resp.Header.Get("Content-Type")
			ext := ".jpg" // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
			switch contentType {
			case "image/jpeg", "image/jpg":
				ext = ".jpg"
			case "image/png":
				ext = ".png"
			case "image/gif":
				ext = ".gif"
			case "image/webp":
				ext = ".webp"
			}

			// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
			fileName := fmt.Sprintf("%d_%s%s", time.Now().Unix(), photo.FileID, ext)
			filePath := filepath.Join(ticketDir, fileName)

			// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
			file, err := os.Create(filePath)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: %v", err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
				return
			}
			defer file.Close()

			// –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
			_, err = io.Copy(file, resp.Body)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: %v", err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
				return
			}

			// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ
			messageText := fmt.Sprintf("–ø—Ä–∏–∫—Ä–µ–ø–∏–ª —Ñ–æ—Ç–æ %s", fileName)
			ticketMessage := &database.TicketMessage{
				TicketID:   state.TicketID,
				SenderType: "user",
				SenderID:   userID,
				Message:    messageText,
			}

			// –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
			messageID, err := database.AddTicketMessage(ticketMessage)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–∏–∫–µ—Ç %d: %v", state.TicketID, err)
				SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
				return
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
			ticketPhoto := &database.TicketPhoto{
				TicketID:   state.TicketID,
				SenderType: "user",
				SenderID:   userID,
				FilePath:   filePath,
				FileID:     photo.FileID,
				MessageID:  messageID, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è
			}

			_, err = database.AddTicketPhoto(ticketPhoto)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ç–æ: %v", err)
			}

			// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞ –Ω–∞ "–æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞"
			err = database.UpdateTicketStatus(state.TicketID, "–û–∂–∏–¥–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–∏–∫–µ—Ç–∞ %d: %v", state.TicketID, err)
			}

			// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ
			msg := tgbotapi.NewMessage(message.Chat.ID,
				"‚úÖ –í–∞—à–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ —Ç–∏–∫–µ—Ç—É.")
			SafeSendMessage(bot, msg)

			// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥
			showTicketConversation(bot, message.Chat.ID, state.TicketID)
			return
		}

		// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∏–∫–µ—Ç
		ticketMessage := &database.TicketMessage{
			TicketID:   state.TicketID,
			SenderType: "user",
			SenderID:   userID,
			Message:    message.Text,
		}

		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç"
		if message.Text == "‚ùå –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç" {
			// –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–∏–∫–µ—Ç
			err := database.CloseTicket(state.TicketID, userID)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞ %d: %v", state.TicketID, err)
				SendErrorMessage(bot, message.Chat.ID, fmt.Sprintf("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç: %v", err))
				return
			}

			msg := tgbotapi.NewMessage(message.Chat.ID, "‚úÖ –¢–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç")
			msg.ReplyMarkup = GetMainMenuKeyboard()
			SafeSendMessage(bot, msg)
			delete(userStates, userID)
			return
		}

		messageID, err := database.AddTicketMessage(ticketMessage)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–∏–∫–µ—Ç %d: %d %v", state.TicketID, messageID, err)
			SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
			return
		}

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞ –Ω–∞ "–æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞"
		err = database.UpdateTicketStatus(state.TicketID, "–æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞")
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–∏–∫–µ—Ç–∞ %d: %v", state.TicketID, err)
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
		successMsg := tgbotapi.NewMessage(message.Chat.ID, "üéâ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
		SafeSendMessage(bot, successMsg)

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥
		showTicketConversation(bot, message.Chat.ID, state.TicketID)
		return

		// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ
		if ticket.Status != "–∑–∞–∫—Ä—ã—Ç" {
			// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞–∑–∞–¥" –∏ "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ"
			keyboard := tgbotapi.NewReplyKeyboard(
				tgbotapi.NewKeyboardButtonRow(
					tgbotapi.NewKeyboardButton("üñº –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ"),
				),
				tgbotapi.NewKeyboardButtonRow(
					tgbotapi.NewKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
				),
			)

			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.\n"+
					"–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ'.\n"+
					"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥'")

			msg.ReplyMarkup = keyboard
			SafeSendMessage(bot, msg)
		} else {
			// –ï—Å–ª–∏ —Ç–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
			keyboard := tgbotapi.NewReplyKeyboard(
				tgbotapi.NewKeyboardButtonRow(
					tgbotapi.NewKeyboardButton("üñº –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ"),
				),
				tgbotapi.NewKeyboardButtonRow(
					tgbotapi.NewKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
				),
			)

			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω.\n"+
					"–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.")

			msg.ReplyMarkup = keyboard
			SafeSendMessage(bot, msg)
		}

	case "viewing_history":
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
		if message.Text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" {
			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
			msg := tgbotapi.NewMessage(message.Chat.ID, "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
			msg.ReplyMarkup = GetMainMenuKeyboard()
			SafeSendMessage(bot, msg)
			delete(userStates, userID)
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Ç–∏–∫–µ—Ç –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
		if strings.HasPrefix(message.Text, "#") {
			parts := strings.Split(message.Text, " ")
			if len(parts) < 2 {
				msg := tgbotapi.NewMessage(message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–∫–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:")
				SafeSendMessage(bot, msg)
				return
			}

			// –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∏–∫–µ—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
			ticketIDStr := parts[0][1:] // –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª # –≤ –Ω–∞—á–∞–ª–µ
			ticketID, err := strconv.Atoi(ticketIDStr)
			if err != nil {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ ID —Ç–∏–∫–µ—Ç–∞: %v", err)
				msg := tgbotapi.NewMessage(message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID —Ç–∏–∫–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:")
				SafeSendMessage(bot, msg)
				return
			}

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∏–∫–µ—Ç –∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			ticket, err := database.GetTicketByID(ticketID)
			if err != nil || ticket.UserID != userID {
				logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞ %d: %v", ticketID, err)
				msg := tgbotapi.NewMessage(message.Chat.ID, "–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–º—É.")
				SafeSendMessage(bot, msg)
				return
			}

			// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
			showTicketConversationReadOnly(bot, message.Chat.ID, ticketID)

			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
			state.State = "viewing_history_ticket"
			state.TicketID = ticketID

			return
		}

		// –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ç–æ–≤ —Å–Ω–æ–≤–∞
		msg := tgbotapi.NewMessage(message.Chat.ID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥':")
		SafeSendMessage(bot, msg)

	case "viewing_history_ticket":
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ —Ç–∏–∫–µ—Ç–æ–≤
		if message.Text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" {
			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ —Ç–∏–∫–µ—Ç–æ–≤
			HandleMainMenu(bot, &tgbotapi.Message{
				From:      message.From,
				Chat:      message.Chat,
				Text:      "–ò—Å—Ç–æ—Ä–∏—è —Ç–∏–∫–µ—Ç–æ–≤",
				MessageID: message.MessageID,
			})
			return
		}

		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ"
		if message.Text == "üñº –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ" {
			showTicketPhotos(bot, message.Chat.ID, state.TicketID)
			return
		}

		// –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
		msg := tgbotapi.NewMessage(message.Chat.ID,
			"üìñ –≠—Ç–æ—Ç —Ç–∏–∫–µ—Ç –æ—Ç–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\n\n"+
				"üñº –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"+
				"‚¨ÖÔ∏è –ò–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ —Ç–∏–∫–µ—Ç–æ–≤")
		SafeSendMessage(bot, msg)

	// –î—Ä—É–≥–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
	default:
		// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
		isRegistered, err := database.IsUserRegistered(userID)
		if err != nil {
			logger.Error.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ %d: %v", userID, err)
			SendErrorMessage(bot, message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
			return
		}

		if isRegistered {
			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
			HandleMainMenu(bot, message)
		} else {
			// –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
			userStates[userID] = &UserState{State: "awaiting_fullname"}

			msg := tgbotapi.NewMessage(message.Chat.ID,
				"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"+
					"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):")
			SafeSendMessage(bot, msg)
		}
	}
}
